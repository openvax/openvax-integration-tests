dist: trusty
sudo: false  # Use container-based infrastructure
language: python
python:
  - "2.7"
  - "3.6"
git:
  # don't need the default depth of 50
  # but don't want to use a depth of 1 since that affects
  # whether jobs run when you have multiple commits queued
  # https://github.com/travis-ci/travis-ci/issues/4575
  depth: 10
cache:
  pip: true
  # cache pip files; directory used for Ensembl downloads of GTF and FASTA files
  # along with the indexed db of intervals and ID mappings and pickles
  # of sequence dictionaries; vaxrank directory containing FM index of reference kmers
  directories:
    - $HOME/.cache/pyensembl/GRCm38/
    - $HOME/downloads
before_install:
  - |
    if [ -d $HOME/downloads ]; then
      echo "downloads dir already exists"
    else
      mkdir $HOME/downloads
    fi
  - |
    if [ -f $HOME/downloads/miniconda.sh ]; then
      echo "already downloaded mini-conda"
    else
      if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O $HOME/downloads/miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/downloads/miniconda.sh;
      fi
    fi
  - bash $HOME/downloads/miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  # reset the shell's lookup table for program name to path mappings
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # install netmhcbundle
  - git clone https://mhcbundle:$MHC_BUNDLE_PASS@github.com/openvax/netmhc-bundle.git
  - export NETMHC_BUNDLE_HOME=$PWD/netmhc-bundle
  - mkdir tmp
  - export NETMHC_BUNDLE_TMPDIR=$PWD/tmp
  - export PATH=$PATH:$NETMHC_BUNDLE_HOME/bin
env:
  global:
    # MHC_BUNDLE_PASS
    - secure: "t/P3bIwlSmDb8s8b7eKg0yvA9i7EGlYOGiFUrnesTXRWmF7KKHhyV56mOxyL38wPZ9+C5P8yQV03NM/qlFGzohksIjDIQDjlO+6isouwgH0ubJ9l0FusmscBaMK1yNxNsJ0qpI91pCfo6e9iCW5k7R/07a4x1O58psharils2zH11moMSP3yX+WlHxC5FGY19Q5rAlFEJY7HEVGvigQLKbaef3SF+dcB+Cy4TZMUIqeaXJ8B/EpNkAyS8Phk+U3sAYpzvi30xIIyGzyzmqUswXoho9mOH0Owk1QkfP/9y1MliRjcC8ZLq/7xJpVQgttBs4VqD8/vlwtpeqZTOYxb9oUJpAe6Vo2rHRVhU5K2z+mGWyQXQuwHaLdZUGQ+bcDkTSPZva6DNsHyMuqy/DA8SQZakKY99aYGHA28dPgqv8rybfAAeCjzH5rrZYKj5KqoXPGgsKwjjNwF6RJJtTM3CReU9CFh/ACPIYFZZecADFx5PpdCHCF1yUxtzpwnNGJ07pGt8A7JkqI28OSRv11cGRa/3Bng7xIZKQV68UJAa4Ga8tQg9QOJ9Q7kTQQjO4L5dFHOQeOtrG9lhDTe6n6hcG78rmzoXRRhDywt2G+HJVUZVgE/F5BYYwCYTcinCDvTghVCRqtD9l9rQ8hnWY5edZvIH4dgNN0POv69I15Ig6A="
    - KERAS_BACKEND=tensorflow
addons:
  apt:
    packages:
    # Needed for NetMHC
    - tcsh
install:
  - >
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
      numpy pandas scikit-learn tensorflow nose pylint pandoc
  - source activate test-environment
  - pip install pypandoc
  - pip install -r requirements.txt
  - pip install coveralls
  # install openvax-integration-tests repo and download mhcflurry
  - git clone https://github.com/openvax/openvax-integration-tests.git
  - pip install -r openvax-integration-tests/requirements.txt --ignore-installed
  - mhcflurry-downloads fetch models_class1_minimal
  - export MHCFLURRY_DEFAULT_CLASS1_MODELS="$(mhcflurry-downloads path models_class1_minimal)/models"
before_script:
  # run linting before installing PyEnsembl data
  - ./lint.sh
  - pyensembl install --species mouse human
script:
  - >
    nosetests -sv test -a '!skip' &&
    nosetests -sv openvax-integration-tests/test
after_success:
  coveralls

